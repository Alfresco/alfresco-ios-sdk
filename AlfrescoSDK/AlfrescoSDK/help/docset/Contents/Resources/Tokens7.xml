<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AlfrescoContentFile.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AlfrescoContentFile</TokenIdentifier>
			<Abstract type="html">The AlfrescoContentFile objects are used for download/upload content.</Abstract>
			<DeclaredIn>AlfrescoContentFile.h</DeclaredIn>
			
			<NodeRef refid="7"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AlfrescoContentFile/setMimeType:</TokenIdentifier>
			<Abstract type="html">mimeType</Abstract>
			<DeclaredIn>AlfrescoContentFile.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) NSString *mimeType</Declaration>
			<Parameters>
				<Parameter>
					<Name>the</Name>
					<Abstract type="html">mimeType</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/mimeType</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AlfrescoContentFile/mimeType</TokenIdentifier>
			<Abstract type="html">mimeType</Abstract>
			<DeclaredIn>AlfrescoContentFile.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) NSString *mimeType</Declaration>
			<Parameters>
				<Parameter>
					<Name>the</Name>
					<Abstract type="html">mimeType</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/mimeType</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AlfrescoContentFile/setLength:</TokenIdentifier>
			<Abstract type="html">length of the file</Abstract>
			<DeclaredIn>AlfrescoContentFile.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readonly) unsigned long long length</Declaration>
			<Parameters>
				<Parameter>
					<Name>the</Name>
					<Abstract type="html">length of the file</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/length</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AlfrescoContentFile/length</TokenIdentifier>
			<Abstract type="html">length of the file</Abstract>
			<DeclaredIn>AlfrescoContentFile.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readonly) unsigned long long length</Declaration>
			<Parameters>
				<Parameter>
					<Name>the</Name>
					<Abstract type="html">length of the file</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/length</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AlfrescoContentFile/initWithUrl:</TokenIdentifier>
			<Abstract type="html">Creates a new file in the temporary directory folder and copies the data of the file at URL
Detects the mime type based on the extension of the file. This method is when downloading a file from a given URL</Abstract>
			<DeclaredIn>AlfrescoContentFile.h</DeclaredIn>			
			
			<Declaration>- (id)initWithUrl:(NSURL *)url</Declaration>
			<Parameters>
				<Parameter>
					<Name>the</Name>
					<Abstract type="html">URL of the file.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithUrl:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AlfrescoContentFile/initWithUrl:mimeType:</TokenIdentifier>
			<Abstract type="html">Creates a new file in the temporary directory folder and copies the data of the file at URL
Detects the mime type based on the extension of the file. This method is when downloading a file from a given URL</Abstract>
			<DeclaredIn>AlfrescoContentFile.h</DeclaredIn>			
			
			<Declaration>- (id)initWithUrl:(NSURL *)url mimeType:(NSString *)mimeType</Declaration>
			<Parameters>
				<Parameter>
					<Name>the</Name>
					<Abstract type="html">URL of the file.</Abstract>
				</Parameter><Parameter>
					<Name>mimeType.</Name>
					<Abstract type="html">If nil is passed in, AlfrescoContentFile attempts to deduce the mimetype from the file name. In case none can be found, the mimeType will remain nil.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithUrl:mimeType:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AlfrescoContentFile/initWithData:mimeType:</TokenIdentifier>
			<Abstract type="html">creates a new  file in the temporary folder. This method is used for uploading. E.g. images from the Photolibrary
are accessible through their data, but not directly through a file URL.</Abstract>
			<DeclaredIn>AlfrescoContentFile.h</DeclaredIn>			
			
			<Declaration>- (id)initWithData:(NSData *)data mimeType:(NSString *)mimeType</Declaration>
			<Parameters>
				<Parameter>
					<Name>data</Name>
					<Abstract type="html">The data to initialise the AlfrescoContentFile with</Abstract>
				</Parameter><Parameter>
					<Name>mimeType</Name>
					<Abstract type="html">the mime type of the data</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithData:mimeType:</Anchor>
		</Token>
		
	</File>
</Tokens>